# Statusbar loop

dte() {
  dte="$(date +"%a %d, %H:%M")"
  echo -e " $dte"
}

bat() {
    battery_level=$(cat /sys/class/power_supply/BAT0/capacity)
    battery_status=$(cat /sys/class/power_supply/BAT0/status)
    # echo "$(cat /sys/class/power_supply/BAT0/capacity)%"
    if [ "$battery_status" = "Charging" ] || [ "$battery_status" = "Unknown" ]; then
        printf " %s%%" "$battery_level"
    else
      printf " %s%%" "$battery_level"
      warning_low_battery
    fi
}

vol() {
    echo "$(amixer get Master | awk -F'[][]' 'END{ print $2 }')"
}

red(){
    if ping gnu.org -c1 > /dev/null; then
	echo ""
    else
	echo "--"
    fi
}

dwm_alsa () {
  vol_status=$(amixer sget Master | tail -n1 | sed -r "s/.*\[(.*)\]/\1/")
  vol_value=$(amixer get Master | tail -n1 | sed -r "s/.*\[(.*)%\].*/\1/")
  printf "%s" "$SEP1"
  if [ "$vol_status" = "off" ]; then
    printf "🔇"
  else
    #removed this line becuase it may get confusing
    if [ "$vol_value" -gt 0 ] && [ "$vol_value" -le 33 ]; then
      printf "🔈 %s%%" "$vol_value"
    elif [ "$vol_value" -gt 33 ] && [ "$vol_value" -le 66 ]; then
      printf "🔉 %s%%" "$vol_value"
    else
      printf "🔊 %s%%" "$vol_value"
    fi
  fi
  # printf "%s\n" "$SEP2"
}

while true; do
  out=$(echo " $(dwm_alsa) | $(bat) | $(red) | $(dte)")
  xsetroot -name "$out"

  sleep 1m
  # done &
done
